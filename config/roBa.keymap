#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 1 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        M_TEXT {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                                              &kp Y            &kp U  &kp I      &kp O    &kp P
&mt LEFT_WIN A    &kp S         &kp D         &kp F             &kp G        &kp LS(LG(NUMBER_4))      &kp MINUS                   &kp H            &kp J  &kp K      &lt 3 L  &lt 3 ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &kp SEMICOLON             &kp SQT                     &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_WIN TAB  &lt 1 SPACE  &lt 3 LANGUAGE_2          &mt RIGHT_SHIFT LANGUAGE_1  &lt 2 BACKSPACE                             &lt 4 DELETE
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        MW_NUM {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN      &kp HASH         &kp DOLLAR       &kp PERCENT                                &kp CARET         &kp AMPERSAND      &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &trans         &trans     &kp KP_NUMBER_6   &kp KP_NUMBER_7    &kp KP_NUMBER_8  &kp KP_NUMBER_9       &kp KP_NUMBER_0
&kp PLUS         &kp MINUS        &kp ASTERISK     &kp SLASH        &kp EQUAL        &kp GRAVE      &kp TILDE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE   &kp RIGHT_BRACE       &kp BACKSLASH
&trans           &trans           &trans           &trans           &trans           &trans         &trans     &kp BACKSPACE                                                               &kp PIPE
            >;
        };

        MW_ARROW_FN {
            bindings = <
&trans   &trans   &trans   &trans  &trans                      &trans         &trans          &kp UP_ARROW    &trans           &kp HOME
&trans   &trans   &trans   &trans  &trans  &trans      &trans  &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&kp F1   &kp F2   &kp F3   &kp F4  &kp F5  &trans      &trans  &kp F6         &kp F7          &kp F8          &kp F9           &kp F10
&kp F11  &kp F12  &kp F13  &trans  &trans  &trans      &trans  &trans                                                          &trans
            >;
        };

        M_MOUSE {
            bindings = <
&trans  &trans     &trans                  &trans                   &kp LG(LS(T))                      &trans    &kp LC(UP_ARROW)    &kp LC(UP_ARROW)     &trans  &trans
&trans  &kp LG(W)  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(RIGHT_ARROW))  &kp LG(T)      &trans      &trans  &mkp MB5  &mkp MB1            &mkp MB2             &trans  &trans
&trans  &trans     &trans                  &trans                   &trans         &trans      &trans  &mkp MB4  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &trans  &trans
&trans  &trans     &trans                  &trans                   &trans         &trans      &trans  &trans                                                     &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        MW_BT {
            bindings = <
&bt BT_CLR    &trans        &trans        &trans        &trans                            &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&to 1         &to 6         &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                          &trans
            >;
        };

        M_sub {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        W_TEXT {
            bindings = <
&kp Q               &kp W     &kp E     &kp R                 &kp T                                                          &kp Y            &kp U  &kp I      &kp O    &kp P
&mt LEFT_CONTROL A  &kp S     &kp D     &kp F                 &kp G        &kp LS(LC(S))         &kp MINUS                   &kp H            &kp J  &kp K      &kp L    &lt 7 ENTER
&mt LEFT_SHIFT Z    &kp X     &kp C     &kp V                 &kp B        &kp SEMI              &kp APOS                    &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL           &kp LGUI  &kp LALT  &mt LEFT_CONTROL TAB  &lt 2 SPACE  &lt 7 LANGUAGE_2      &mt RIGHT_SHIFT LANGUAGE_1  &lt 2 BACKSPACE                             &lt 4 DELETE
            >;
        };

        W_MOUSE {
            bindings = <
&trans  &trans     &trans           &trans       &kp LC(LS(T))                      &trans    &kp LG(LC(UP_ARROW))    &kp LG(LC(UP_ARROW))     &trans  &trans
&trans  &kp LC(W)  &kp LC(LS(TAB))  &kp LC(TAB)  &kp LC(T)      &trans      &trans  &mkp MB5  &mkp MB1                &mkp MB2                 &trans  &trans
&trans  &trans     &trans           &trans       &trans         &trans      &trans  &mkp MB4  &kp LG(LC(LEFT_ARROW))  &kp LG(LC(RIGHT_ARROW))  &trans  &trans
&trans  &trans     &trans           &trans       &trans         &trans      &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        W_sub {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
